import { c as createComponent, a as createAstro, e as renderHead, r as renderComponent, d as addAttribute, g as renderSlot, b as renderTemplate } from './astro/server_BoYrjx9A.mjs';
import 'kleur/colors';
import 'html-escaper';
/* empty css                             */

const $$Astro = createAstro();
const $$Layout = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Layout;
  const { pathname } = Astro2.props;
  const isActive = (path) => pathname === path;
  return renderTemplate`<html lang="en"> <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>CRP in Action - Observation System</title>${renderHead()}</head> <body> <div class="min-h-screen bg-gray-50 flex"> <!-- Sidebar --> <div class="w-64 bg-white shadow-sm border-r border-gray-200 flex flex-col"> <!-- Logo/Header --> <div class="p-6 border-b border-gray-200"> <div class="flex items-center space-x-3"> <div class="bg-blue-500 p-2 rounded-lg"> ${renderComponent($$result, "BookOpen", null, { "className": "w-6 h-6 text-white", "client:only": "react", "client:component-hydration": "only", "client:component-path": "lucide-react", "client:component-export": "BookOpen" })} </div> <div> <h1 class="text-lg font-bold text-gray-900">CRP in Action</h1> <p class="text-xs text-gray-600">Observation System</p> </div> </div> </div> <!-- Quick Stats --> <div class="p-6 border-b border-gray-200"> <div class="space-y-3"> <div class="flex items-center justify-between"> <span class="text-sm text-gray-600">Goal Progress</span> <span class="text-sm font-medium text-blue-600">247/5,000</span> </div> <div class="w-full bg-gray-200 rounded-full h-2"> <div class="bg-blue-500 h-2 rounded-full w-[4.9%]"></div> </div> <div class="grid grid-cols-2 gap-3 text-xs"> <div class="text-center"> <div class="font-medium text-gray-900">68%</div> <div class="text-gray-500">CRP Evidence</div> </div> <div class="text-center"> <div class="font-medium text-gray-900">68/80</div> <div class="text-gray-500">Observers</div> </div> </div> </div> </div> <!-- Navigation --> <nav class="flex-1 p-6"> <div class="space-y-2"> <a href="/dashboard"${addAttribute(`flex items-center space-x-4 px-3 py-2 rounded-lg text-sm font-medium transition-colors ${isActive("/dashboard") ? "bg-blue-50 text-blue-700 border border-blue-200" : "text-gray-700 hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "LayoutDashboard", null, { "className": "w-5 h-5", "client:only": "react", "client:component-hydration": "only", "client:component-path": "lucide-react", "client:component-export": "LayoutDashboard" })} <span>Dashboard</span> </a> <a href="/observations"${addAttribute(`flex items-center space-x-4 px-3 py-2 rounded-lg text-sm font-medium transition-colors ${isActive("/observations") ? "bg-blue-50 text-blue-700 border border-blue-200" : "text-gray-700 hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "BookOpen", null, { "className": "w-5 h-5", "client:only": "react", "client:component-hydration": "only", "client:component-path": "lucide-react", "client:component-export": "BookOpen" })} <span>Observations</span> </a> <a href="/framework"${addAttribute(`flex items-center space-x-4 px-3 py-2 rounded-lg text-sm font-medium transition-colors ${isActive("/framework") ? "bg-blue-50 text-blue-700 border border-blue-200" : "text-gray-700 hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "Settings", null, { "className": "w-5 h-5", "client:only": "react", "client:component-hydration": "only", "client:component-path": "lucide-react", "client:component-export": "Settings" })} <span>Framework Config</span> </a> <a href="/data"${addAttribute(`flex items-center space-x-4 px-3 py-2 rounded-lg text-sm font-medium transition-colors ${isActive("/data") ? "bg-blue-50 text-blue-700 border border-blue-200" : "text-gray-700 hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "Database", null, { "className": "w-5 h-5", "client:only": "react", "client:component-hydration": "only", "client:component-path": "lucide-react", "client:component-export": "Database" })} <span>Data Management</span> </a> </div> <!-- Mobile Observation Link --> <div class="mt-8 pt-6 border-t border-gray-200"> <a href="/observe" class="flex items-center space-x-4 px-3 py-2 rounded-lg text-sm font-medium bg-green-50 text-green-700 border border-green-200 hover:bg-green-100 transition-colors"> ${renderComponent($$result, "Smartphone", null, { "className": "w-5 h-5", "client:only": "react", "client:component-hydration": "only", "client:component-path": "lucide-react", "client:component-export": "Smartphone" })} <span>Mobile Observe</span> </a> </div> </nav> <!-- Footer --> <div class="p-6 border-t border-gray-200"> <div class="text-xs text-gray-500"> <div class="font-medium mb-1">Strategic Priorities</div> <div class="space-y-1"> <div class="flex items-center space-x-2"> ${renderComponent($$result, "Users", null, { "className": "w-3 h-3", "client:only": "react", "client:component-hydration": "only", "client:component-path": "lucide-react", "client:component-export": "Users" })} <span>Social-Emotional Well-being</span> </div> <div class="flex items-center space-x-2"> ${renderComponent($$result, "TrendingUp", null, { "className": "w-3 h-3", "client:only": "react", "client:component-hydration": "only", "client:component-path": "lucide-react", "client:component-export": "TrendingUp" })} <span>Culturally Responsive Teaching</span> </div> </div> </div> </div> </div> <!-- Main Content --> <div class="flex-1 overflow-auto"> ${renderSlot($$result, $$slots["default"])} </div> </div> </body></html>`;
}, "/home/user/EducatorEval/src/layouts/Layout.astro", void 0);

export { $$Layout as $ };
