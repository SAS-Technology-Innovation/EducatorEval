import{r as w}from"./index.BkCxzhY_.js";import{g as y,b as h,d as g,f as I,h as m,i as P,j as A,k as C,m as v,n as S,p as L}from"./config.DNoymYbc.js";var M={};const b=[{id:"observer1",name:"Sarah Johnson",email:"observer@school.edu",role:"observer",department:"Instructional Support",permissions:["observe","view_observations"]},{id:"teacher1",name:"Michael Brown",email:"teacher@school.edu",role:"teacher",department:"Science",permissions:["view_own_observations"]},{id:"coordinator1",name:"Emily Wilson",email:"coordinator@school.edu",role:"coordinator",department:"Administration",permissions:["observe","manage_frameworks","view_all_observations","manage_users"]}],a=e=>({questionId:"",value:e,timestamp:new Date().toISOString()}),l=[{id:"obs1",teacherId:"teacher1",teacherName:"Michael Brown",observerId:"observer1",observerName:"Sarah Johnson",frameworkId:"crp-in-action",date:"2025-08-24",startTime:"09:15",endTime:"10:05",duration:50,status:"completed",responses:{lookfor1:a("4"),lookfor2:a("3"),lookfor3:a("4"),lookfor4:a("2"),lookfor5:a("3"),lookfor6:a("3"),lookfor7:a("4"),lookfor8:a("2"),lookfor9:a("4"),lookfor10:a("3")},comments:{lookfor1:"Clear learning targets posted on board. Students could articulate what they were learning about cellular respiration.",lookfor2:"Welcoming classroom environment with student work displayed. Teacher used affirming language.",lookfor3:"Used exit tickets and frequent check-ins during lab work.",lookfor4:"Mostly lower-level recall questions. Could incorporate more analysis.",lookfor5:"Students worked well in lab groups with defined roles.",lookfor6:"Connected respiration to students' experiences with exercise.",lookfor7:"Circulated constantly, provided targeted support.",lookfor8:"Limited reflection time - students rushed to pack up.",lookfor9:"Positive interactions, knows all student names.",lookfor10:"Provided different complexity levels for lab analysis."},overallComment:"Strong lesson with clear objectives and good relationship building. Opportunities to increase cognitive demand and provide more reflection time.",classInfo:{subject:"Biology",name:"Biology - Period 2",room:"A108",period:"Period 2",grade:"10th Grade"},crpEvidenceCount:8,totalLookFors:10},{id:"obs2",teacherId:"teacher2",teacherName:"David Chen",observerId:"observer1",observerName:"Sarah Johnson",frameworkId:"crp-in-action",date:"2025-08-23",startTime:"13:20",endTime:"14:10",duration:50,status:"in-progress",responses:{lookfor1:a("4"),lookfor2:a("4"),lookfor3:a("3"),lookfor4:a("3")},comments:{lookfor1:"Posted essential question and learning objectives. Students referenced them during discussion.",lookfor2:"Inclusive classroom with diverse perspectives welcomed. Cultural artifacts displayed.",lookfor3:"Used thumbs up/down checks and think-pair-share.",lookfor4:"Asked some analysis questions about historical causes."},overallComment:"",classInfo:{subject:"World History",name:"World History - Period 4",room:"B112",period:"Period 4",grade:"9th Grade"},crpEvidenceCount:4,totalLookFors:10},{id:"obs3",teacherId:"teacher3",teacherName:"Maria Rodriguez",observerId:"coordinator1",observerName:"Emily Wilson",frameworkId:"crp-in-action",date:"2025-08-22",startTime:"14:15",endTime:"15:05",duration:50,status:"completed",responses:{lookfor1:a("4"),lookfor2:a("4"),lookfor3:a("4"),lookfor4:a("4"),lookfor5:a("4"),lookfor6:a("4"),lookfor7:a("3"),lookfor8:a("3"),lookfor9:a("4"),lookfor10:a("4")},comments:{lookfor1:"Can-do statements clearly posted in Spanish and English.",lookfor2:"Celebrated Latino heritage month, inclusive of all cultures.",lookfor3:"Constant comprehension checks in target language.",lookfor4:"Higher-order questions about cultural comparisons.",lookfor5:"Authentic communication tasks with peer collaboration.",lookfor6:"Connected lesson to students' family traditions.",lookfor7:"Monitored pair work effectively.",lookfor8:"Reflection in target language about cultural learning.",lookfor9:"Warm, encouraging interactions with all students.",lookfor10:"Multiple entry points for different proficiency levels."},overallComment:"Exemplary lesson demonstrating culturally responsive practices and authentic language use. Strong model for department.",classInfo:{subject:"Spanish II",name:"Spanish II - Period 5",room:"D201",period:"Period 5",grade:"10th Grade"},crpEvidenceCount:10,totalLookFors:10}];let c=b[0];const k={getCurrentUser:()=>c,signIn:async(e,r)=>{const o=b.find(s=>s.email===e);if(o&&r==="password")return c=o,o;throw new Error("Invalid credentials")},signOut:async()=>{c=null},isAuthenticated:()=>c!==null},H={getAll:async()=>[...l],getByObserver:async e=>l.filter(r=>r.observerId===e),getByTeacher:async e=>l.filter(r=>r.teacherId===e),create:async e=>{const r=`obs${l.length+1}`,o={...e,id:r};return l.push(o),r},update:async(e,r)=>{const o=l.findIndex(s=>s.id===e);o!==-1&&(l[o]={...l[o],...r})},delete:async e=>{const r=l.findIndex(o=>o.id===e);r!==-1&&l.splice(r,1)},search:async(e,r)=>{let o=[...l];return e&&(o=o.filter(s=>s.teacherName.toLowerCase().includes(e.toLowerCase())||s.classInfo.subject.toLowerCase().includes(e.toLowerCase())||s.classInfo.name.toLowerCase().includes(e.toLowerCase()))),r?.status&&r.status.length>0&&(o=o.filter(s=>r.status.includes(s.status))),o},getStats:async()=>{const e=l.length,r=l.filter(u=>new Date(u.date).getMonth()===new Date().getMonth()).length,o=l.filter(u=>u.status==="completed"),s=o.length>0?o.reduce((u,d)=>u+(d.crpEvidenceCount||0),0)/o.length:0;return{total:e,thisMonth:r,crpEvidenceAverage:s}},getRecent:async(e=20)=>({observations:[...l].sort((o,s)=>new Date(s.date).getTime()-new Date(o.date).getTime()).slice(0,e)})},f=()=>!M.PUBLIC_FIREBASE_API_KEY,O=async({email:e,password:r})=>{try{const s=(await S(m,e,r)).user,u=await y(h(g,"users",s.uid));if(!u.exists())throw new Error("User profile not found");const d=u.data();return await v(h(g,"users",s.uid),{...d,lastLogin:new Date().toISOString()},{merge:!0}),{id:s.uid,email:s.email,name:d.name,role:d.role,department:d.department,permissions:d.permissions||[],lastLogin:new Date().toISOString()}}catch(o){const s=o;throw new Error(p(s.code))}},x=async e=>{try{const o=(await A(m,e.email,e.password)).user;await C(o,{displayName:e.name});const s={name:e.name,email:e.email,role:e.role,department:e.department,permissions:T(e.role),lastLogin:new Date().toISOString()};return await v(h(g,"users",o.uid),s),{id:o.uid,...s}}catch(r){const o=r;throw new Error(p(o.code))}},U=async()=>{try{await P(m)}catch(e){const r=e;throw new Error(p(r.code))}},D=async e=>{try{await I(m,e)}catch(r){const o=r;throw new Error(p(o.code))}},N=async e=>{try{const r=await y(h(g,"users",e.uid));if(!r.exists())return null;const o=r.data();return{id:e.uid,email:e.email,name:o.name,role:o.role,department:o.department,permissions:o.permissions||[],lastLogin:o.lastLogin}}catch(r){return console.error("Error getting user profile:",r),null}},T=e=>{switch(e){case"admin":return["frameworks.read","frameworks.write","observations.read","observations.write","users.read","users.write","analytics.read","data.import","data.export"];case"coordinator":return["frameworks.read","frameworks.write","observations.read","analytics.read","data.export"];case"observer":return["frameworks.read","observations.write","observations.read.own","teachers.read"];case"teacher":return["observations.read.own"];default:return[]}},p=e=>{switch(e){case"auth/user-disabled":return"This account has been disabled.";case"auth/user-not-found":return"No account found with this email address.";case"auth/wrong-password":return"Incorrect password.";case"auth/email-already-in-use":return"An account with this email already exists.";case"auth/weak-password":return"Password should be at least 6 characters.";case"auth/invalid-email":return"Please enter a valid email address.";case"auth/too-many-requests":return"Too many unsuccessful attempts. Please try again later.";default:return"An authentication error occurred. Please try again."}},J=()=>{const[e,r]=w.useState({user:f()?c:null,isAuthenticated:f()?c!==null:!1,isLoading:!f()}),[o,s]=w.useState(null);return f()?{user:c,isAuthenticated:c!==null,isLoading:!1,error:o,signIn:async n=>{try{const t=await k.signIn(n.email,n.password);return r({user:t,isAuthenticated:!0,isLoading:!1}),{user:t,error:null}}catch(t){const i=t instanceof Error?t.message:"Authentication failed";return s(i),{user:null,error:i}}},signOut:async()=>{await k.signOut(),r({user:null,isAuthenticated:!1,isLoading:!1})},signUp:async n=>(s("Signup not implemented in mock mode"),{user:null,error:"Signup not implemented in mock mode"}),resetPassword:async n=>(s("Password reset not implemented in mock mode"),{success:!1,error:"Password reset not implemented in mock mode"}),updateProfile:async n=>c?(Object.assign(c,n),r({user:c,isAuthenticated:!0,isLoading:!1}),{success:!0,error:null}):{success:!1,error:"No user logged in"},switchRole:async n=>c?(c.role=n,r({user:c,isAuthenticated:!0,isLoading:!1}),{success:!0,error:null}):{success:!1,error:"No user logged in"},clearError:()=>s(null)}:(w.useEffect(()=>{const n=L(m,async t=>{if(t)try{const i=await N(t);r(i?{user:i,isAuthenticated:!0,isLoading:!1,token:await t.getIdToken()}:{user:null,isAuthenticated:!1,isLoading:!1})}catch(i){console.error("Error getting user profile:",i),r({user:null,isAuthenticated:!1,isLoading:!1})}else r({user:null,isAuthenticated:!1,isLoading:!1})});return()=>n()},[]),{...e,error:o,signIn:async n=>{try{s(null);const t=await O(n);return r(i=>({...i,user:t,isAuthenticated:!0})),!0}catch(t){const i=t instanceof Error?t.message:"Sign in failed";return s(i),!1}},signUp:async n=>{try{s(null);const t=await x(n);return!0}catch(t){const i=t instanceof Error?t.message:"Account creation failed";return s(i),!1}},signOut:async()=>{try{s(null),await U(),r({user:null,isAuthenticated:!1,isLoading:!1})}catch(n){const t=n instanceof Error?n.message:"Sign out failed";s(t)}},sendPasswordReset:async n=>{try{return s(null),await D(n),!0}catch(t){const i=t instanceof Error?t.message:"Password reset failed";return s(i),!1}},hasPermission:n=>e.user?.permissions?.includes(n)||!1,hasRole:n=>e.user?.role===n,updateProfile:async n=>{try{if(s(null),!e.user)throw new Error("No authenticated user");const t={...e.user,...n};return r(i=>({...i,user:t})),!0}catch(t){const i=t instanceof Error?t.message:"Failed to update profile";return s(i),!1}},switchRole:async n=>{try{if(s(null),!e.user)throw new Error("No authenticated user");if(!e.user.permissions.includes(`role.${n}`))throw new Error("You do not have permission to switch to this role");const i={...e.user,role:n};return r(E=>({...E,user:i})),!0}catch(t){const i=t instanceof Error?t.message:"Failed to switch role";return s(i),!1}},clearError:()=>s(null)})};export{H as m,f as s,J as u};
